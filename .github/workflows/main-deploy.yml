name: Complete Deploy Pipeline

# Trigger del workflow: push sul branch master  
on:
  push:
    branches: [ master ]

jobs:
  deploy:
    name: Deploy and Reload Nginx
    runs-on: self-hosted  # Usa runner locale invece di GitHub
    environment: Production
    
    steps:
    # 1. Checkout del codice
    - name: Checkout code
      uses: actions/checkout@v4
      
    # 2. Debug della configurazione
    - name: Debug secrets configuration
      run: |
        echo "HOST is set: ${{ secrets.HOST != '' }}"
        echo "USERNAME is set: ${{ secrets.USERNAME != '' }}"
        echo "SSH_PRIVATE_KEY is set: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
      
    # 3. Test connessione SSH
    - name: Test SSH Connection
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 30s
        script: |
          echo "‚úÖ SSH connection successful!"
          echo "Current user: $(whoami)"
          echo "Current directory: $(pwd)"
          
    # 4. Deploy del codice e reload nginx (direttamente sul server)
    - name: Deploy and Reload Nginx
      run: |
        # Naviga nella directory del progetto
        cd /home/dhwp/proxy.dh.unica
        
        # Pulisce eventuali cambiamenti locali e fa pull dei nuovi cambiamenti
        echo "üîÑ Updating code from Git..."
        git fetch origin
        git reset --hard origin/master
        git pull origin master
        
        # Esegue il reload di nginx (ricarica configurazione senza downtime)
        echo "üîÑ Reloading Nginx configuration..."
        chmod +x nginx-reload.sh
        ./nginx-reload.sh
        
        # Verifica che la configurazione sia corretta
        echo "‚úÖ Verifying Nginx configuration..."
        docker exec dhunica_proxypass nginx -t
        
        echo "üéâ Deploy completed successfully!"

    # 5. Notifica del risultato
    - name: Notify deployment result
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "‚úÖ Deploy completato con successo!"
        else
          echo "‚ùå Deploy fallito!"
          exit 1
        fi